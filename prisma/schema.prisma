generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  email    String     @unique
  password String
  name     String?
  MyCourse MyCourse[]
}

model Course {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  imageUrl String?
  chapters Chapter[]  @relation("CourseChapters")
  MyCourse MyCourse[]
}

model Chapter {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  courseId String  @db.ObjectId
  course   Course  @relation("CourseChapters", fields: [courseId], references: [id])
  topics   Topic[]
}

model Topic {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  description String?
  link        String
  Chapter     Chapter? @relation(fields: [chapterId], references: [id])
  chapterId   String?  @db.ObjectId
}

model MyCourse {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  userId          String           @db.ObjectId
  courseId        String           @db.ObjectId
  course          Course           @relation(fields: [courseId], references: [id])
  user            User             @relation(fields: [userId], references: [id])
  completedTopics CompletedTopic[]
  status          Status           @default(NOT_STARTED)
}

type CompletedTopic {
  topicId     String?  @db.ObjectId
  completedAt DateTime @default(now())
}

enum Status {
  COMPLETED
  IN_PROGRESS
  NOT_STARTED
}
